"use strict";class PassPhraseJS{constructor(words,options){this.minLength=10,this.minWords=2,this.maxWords=4,this.separators="+-*:.!?,",this.words=words||[],this.setOptions(options),this.init()}init(){document.addEventListener("click",this.handleClick.bind(this)),this.each(this.$$("[passphrasejs]"),el=>{el.innerText=this.passphrase()});let info=this.$("[passphrasejs-info]");info&&(info.innerText=this.info().join("\n"))}$(selector){return document.querySelector(selector)}$$(selector){return document.querySelectorAll(selector)}copyTo(el){if(!el)return;let selector=el.getAttribute("passphrasejs-copyto"),val=el.innerText,event=new Event("change",{bubbles:!0});return this.each(this.$$(selector),input=>{input.value=val,input.dispatchEvent(event)}),!0}each(array,callback){for(var i=0;i<array.length;i++)callback(array[i])}handleClick(e){let el=e.target;this.copyTo(el.closest("[passphrasejs-copyto"))&&e.preventDefault(),this.renew(el.closest("[passphrasejs-renew"))&&e.preventDefault()}info(){let info=["Words in the dictionary: "+this.words.length,"["+this.words.join(", ")+"]","","--- Settings for random passphrase"],props=["separators","minLength","minWords","maxWords"];for(var i=0;i<props.length;i++){let prop=props[i];info.push(prop+': "'+this[prop]+'"')}return info.push(""),info.push("--- Possible Passwords (minLength ignored)"),info.push(this.possible({words:this.words.length,minWords:this.minWords,maxWords:this.maxWords,separators:this.separators}).toLocaleString()),info}join(words,separators){let sep="",result="";for(var i=0;i<words.length;i++)result=result+sep+words[i],sep=this.separator(separators);return result}lower(word){return word.toLowerCase()}passphrase(){let numwords=this.rand(this.minWords,this.maxWords),words=[],exclude=[];for(var i=0;i<numwords;i++){var word=this.randomWord();words.push(word),exclude.push(this.lower(word))}let phrase=this.join(words);return phrase.length<this.minLength?this.passphrase():phrase}possible(settings){if(settings.words<1)return"-- INVALID --";let words=2*settings.words,dimensions=this.possibleDimensions(settings),total=0;return this.each(dimensions,dim=>{let dimPlain=Math.pow(words,dim),numSeps=settings.separators.length,wordSeps=dim-1,sepCombinations=Math.pow(numSeps,wordSeps),dimTotal;total+=dimPlain*sepCombinations}),total}possibleDimensions(settings){let dimensions=[],max=settings.maxWords;for(;max>=settings.minWords;)dimensions.push(1*max),max--;return dimensions}rand(min,max){return Math.floor(Math.random()*(max-min+1)+min)}randomWord(){let word=this.randomArrayElement(this.words);return this.randomArrayElement([this.lower(word),this.upper(word)])}randomArrayElement(array){return array[Math.floor(Math.random()*array.length)]}renew(el){if(!el)return;let selector=el.getAttribute("passphrasejs-renew"),target=this.$(selector);return target?(target.innerText=this.passphrase(),!0):void 0}separator(separators){return(separators=separators||this.separators)[Math.floor(Math.random()*separators.length)]}setOptions(options,logInfo){for(var prop in options=options||{}){let val=options[prop];this[prop]=val}logInfo&&console.log(this.info())}upper(word){return word.charAt(0).toUpperCase()+word.slice(1)}}